package fr.byob.bs.model.annonce;
// Generated 27 févr. 2009 10:34:58 by Hibernate Tools 3.2.2.GA

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.EnumType;
import javax.persistence.Enumerated;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;

import org.hibernate.annotations.NamedQueries;
import org.hibernate.annotations.NamedQuery;
import org.hibernate.validator.NotNull;

import fr.byob.bs.action.utilisateur.messagerie.ContactManager;
import fr.byob.bs.model.bateau.TypeCoque;
import fr.byob.bs.model.utilisateur.Utilisateur;

/**
 * Demande generated by hbm2java
 */
@NamedQueries( {
		@NamedQuery(name = "demande.findAll", query = "select demande from Demande demande left join fetch demande.lieuDepart left join fetch demande.lieuArrivee "
				+ "join fetch demande.utilisateur u left join fetch u.roles left join u.langues left join fetch u.photoUtilisateur join fetch u.coordonnees.lieu residence join fetch residence.pays "
				+ "where demande.valide <> false order by demande.note desc"),
		@NamedQuery(name = "demande.validateByUser", query = "update Demande demande set demande.valide = true where lower(demande.utilisateur) like lower(:pseudo)") })
@Entity
@Table(name = "DEMANDE")
public class Demande extends Annonce {

	private static final long serialVersionUID = 1L;

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "UTILISATEUR", nullable = false)
	@NotNull
	private Utilisateur utilisateur;
	
	@Enumerated(EnumType.STRING)
	@Column(name = "TYPE_COQUE", nullable = true)
	private TypeCoque typeCoque;

	public Demande() {
		super();
	}

	public Demande(Utilisateur utilisateur, TypeCoque typeCoque) {
		this.utilisateur = utilisateur;
		this.typeCoque = typeCoque;
	}

	public Utilisateur getUtilisateur() {
		return this.utilisateur;
	}

	public void setUtilisateur(Utilisateur utilisateur) {
		this.utilisateur = utilisateur;
	}

	public TypeCoque getTypeCoque() {
		return this.typeCoque;
	}

	public void setTypeCoque(TypeCoque typeCoque) {
		this.typeCoque = typeCoque;
	}

	public String getObjectType() {
		return ContactManager.OBJECT_TYPE.DEMANDE.name();
	}
}

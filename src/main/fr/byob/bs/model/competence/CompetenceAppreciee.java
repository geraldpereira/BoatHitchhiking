package fr.byob.bs.model.competence;
// Generated 27 févr. 2009 10:34:58 by Hibernate Tools 3.2.2.GA

import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;

import org.hibernate.validator.NotNull;

import fr.byob.bs.model.utilisateur.Appreciation;

/**
 * CompsAutresAppreciees generated by hbm2java
 */
@Entity
@Table(name = "COMPETENCE_APPRECIEE")
public class CompetenceAppreciee implements java.io.Serializable {

	private static final long serialVersionUID = 1L;

	private CompetenceApprecieeId id;
	private Competence competence;
	private Appreciation appreciation;
	private Integer note;

	public CompetenceAppreciee() {
	}

	public CompetenceAppreciee(CompetenceApprecieeId id,
			Competence competence, Appreciation appreciation, Integer note) {
		this.id = id;
		this.competence = competence;
		this.appreciation = appreciation;
		this.note = note;
	}

	@EmbeddedId
	@AttributeOverrides({
			@AttributeOverride(name = "appreciation", column = @Column(name = "APPRECIATION", nullable = false)),
			@AttributeOverride(name = "competence", column = @Column(name = "COMPETENCE", nullable = false))})
	@NotNull
	public CompetenceApprecieeId getId() {
		return this.id;
	}

	public void setId(CompetenceApprecieeId id) {
		this.id = id;
	}
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "COMPETENCE", nullable = false, insertable = false, updatable = false)
	@NotNull
	public Competence getCompetence() {
		return this.competence;
	}

	public void setCompetence(Competence competence) {
		this.competence = competence;
	}
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "APPRECIATION", nullable = false, insertable = false, updatable = false)
	@NotNull
	public Appreciation getAppreciation() {
		return this.appreciation;
	}

	public void setAppreciation(Appreciation appreciation) {
		this.appreciation = appreciation;
	}

	@Column(name = "NOTE", nullable = false)
	@NotNull
	public Integer getNote() {
		return this.note;
	}

	public void setNote(Integer note) {
		this.note = note;
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((id == null) ? 0 : id.hashCode());
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		CompetenceAppreciee other = (CompetenceAppreciee) obj;
		if (id == null) {
			if (other.id != null)
				return false;
		} else if (!id.equals(other.id))
			return false;
		return true;
	}

}
